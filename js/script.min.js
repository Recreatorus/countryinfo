async function writingAll(e,t){wrapper=document.querySelector("["+t+"]");const n=document.getElementsByClassName(e);for(;wrapper;)for(i=0;i<n.length;i++){const e=n[i].textContent;await write(e),await sleep(500),await erase(),await sleep(500)}}async function write(e){let t=0;for(;t<e.length;){const n=100;await sleep(n),t++,wrapper.innerHTML=e.substring(0,t)}}async function erase(){for(;wrapper.textContent.length;){const e=50;await sleep(e),wrapper.textContent=wrapper.textContent.substring(0,wrapper.textContent.length-2)}}function offsetToMs(e){const[t,n]=e.replace(/utc/i,"").split(":").map(e=>Number(e.replace(/\D/,""))),a=60*t*60*1e3+60*n*1e3;return e.includes("-")?-a:a}let wrapper;const sleep=e=>new Promise(t=>setTimeout(t,e));writingAll("item","data-text");var currentDate=new Date;const searchcountry=async e=>{const t=await fetch("./data/countries.json"),n=await t.json();let a=n.filter(t=>{const n=new RegExp(`^${e}`,"gi");return t.country.match(n)||t.abbr.match(n)});0===e.length&&(a=[],countryList.innerHTML=""),outputHtml(a);let c=document.querySelectorAll(".capitalCity");c.forEach(e=>{e.addEventListener("click",function(){c.forEach(e=>e.classList.remove("active")),this.classList.add("active");var e=this.querySelector("span").textContent||this.querySelector("span").innerText;const t="4d8fb5b93d4af21d66a2948710284366",n=`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=${t}&units=metric`;fetch(n).then(e=>e.json()).then(e=>{const{main:t,name:n,sys:a,weather:c}=e,r=`./img/weather/${c[0].icon}.svg`,s=document.querySelector(".capitalCity.active #capitalWeather"),i=`\n            <div class="city-name" data-name="${n},${a.country}">\n              <span>${n}</span>\n            </div>\n            <div class="city-temp">${Math.round(t.temp)}<sup>°C</sup></div>\n            <figure>\n              <img class="city-icon" src="${r}" alt="${c[0].description}">\n              <figcaption>${c[0].description}</figcaption>\n            </figure>\n          `;s.innerHTML=i}).catch(()=>{c.textContent="Please search for a valid city"})})});let r=document.querySelectorAll(".currency");r.forEach(e=>{e.addEventListener("click",function(){r.forEach(e=>e.classList.remove("currency-open")),this.classList.add("currency-open");var e=this.querySelector("span").textContent||this.querySelector("span").innerText;const t="https://openexchangerates.org/api/latest.json?app_id=507f9314f79f467d9605061678f7e286";fetch(t).then(e=>e.json()).then(t=>{const n=document.querySelector(".currency-open #currencyData");let a=new Intl.NumberFormat(void 0,{style:"currency",currency:`${e}`,currencyDisplay:"name"}).format(`${t.rates[e]}`);const c=`\n            <span>1 US$ = ${a}</span>\n          `;n.innerHTML=c}).catch(()=>{r.textContent="There is no data",console.log("There is no data")})})})},outputHtml=e=>{if(e.length>0){const t=e.map(e=>`\n          <div class="card">\n            <div class="card-top">\n              <div class="card-title">${e.country}</div>\n              <img src="./img/flags/${e.code.toLowerCase()}.svg">\n            </div>\n            <div class="card-data">\n              <div class="population">\n              Population: <span>${e.population.replace(/\B(?=(\d{3})+(?!\d))/g," ")}</span></div>\n              <div class="area">Area: <span>${(e.area/1e3).toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g," ")} thous.km<sup>2</sup></span></div>\n              <div class="capitalCity">Capital: <span class="capitalName">${e.capital}</span>\n                <div id="capitalWeather"></div>\n              </div>\n              <div class="countryCode">Country Code: <span>${e.phoneCode}</span></div>\n              <div class="currency">Сurrency: <span>${e.currency}</span>\n                <div id="currencyData"></div>\n              </div>\n              <div class="time">Time in the capital: <span>${new Date((new Date).getTime()+offsetToMs(`${e.timezones}`)).toUTCString()}</span></div>\n            </div>\n          </div>\n        `).join("");document.getElementById("countryList").innerHTML=t}};document.getElementById("search").addEventListener("input",()=>searchcountry(search.value));